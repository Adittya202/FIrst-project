1)
public class StudentTester{
   public static void main(String[] args){
       Student s1 = new Student("Harry", "CSE");
       System.out.println(s1.name);
       s1.updateName("Harry Potter");
       System.out.println(s1.accessName());
       System.out.println(s1.prog);
       s1.updateProgram("CS");
       String prog = s1.accessProgram();
       System.out.println(prog);
   }
}

public class Student {
  public String name;
  public String prog;
  Student(String name,String prog){
    this.name=name;
    this.prog=prog;
  }
  void updateName(String name){
    this.name=name;
  }
  String accessName(){
    return name;
  }
  void updateProgram(String prog){
    this.prog=prog;
  }
  String accessProgram(){
    return prog;
  }
}

2)
public class ToyTester{
    public static void main(String[] args){
        Toy t1 = new Toy("Car", 230);
        System.out.println("1=================");
        t1.updatePrice(250);
        System.out.println("2=================");
        System.out.println(t1.name);
        t1.showPrice();
        System.out.println("3=================");
        Toy t2 = new Toy("Robot", 450);
        System.out.println("4=================");
        t2.updateName("Autobot");
        System.out.println("5=================");
        System.out.println(t2.name);
        t2.showPrice();
    }
}

public class Toy{
  public String name;
  public int price;
 
  
  Toy(String name,int price){
    this.name=name;
    this.price=price;
      System.out.println("A new toy has been made");
   
  }
  void updatePrice(int price){
  this.price=price;
  }
  void updateName(String name){
    System.out.println("Changing old name : "+this.name);
    this.name=name;
    System.out.println("New name : "+name);
  }
    
  void showPrice(){
    System.out.println("Price : "+price + " Taka");
  }
}

3)
public class ParcelDriver {
   public static void main(String[] args){
      Parcel p1 = new Parcel();
      p1.printDetails();
      p1.name = "Spongebob";
      p1.printDetails();
      System.out.println("1**************");
      Parcel p2 = new Parcel("Bob the Builder");
      p2.weight = 15;
      p2.calcFee("Gulshan");
      p2.printDetails();
      System.out.println("2**************");
      p2.addWeight(25);
      p2.calcFee("Banani");        
 p2.printDetails();
      System.out.println("3**************");
      Parcel p3 = new Parcel("Dora the Explorer", 10);
      p3.addWeight(15);
      p3.calcFee("Dhanmondi");
      p3.printDetails();
   }
}

public class Parcel {
    public String name;
    public int weight;
    public double fee;


    public Parcel() {
        this.name = null;
        this.weight = 0;
        this.fee = 0;
    }

    
    public Parcel(String name) {
        this.name = name;
        this.weight = 0;
        this.fee = 0;
    }

   
    public Parcel(String name, int weight) {
        this.name = name;
        this.weight = weight;
        this.fee = 0;
    }

  
    void printDetails() {
        if (name == null) {
            System.out.println("Set name first");
        } else {
            System.out.println("Name: " + name);
            System.out.println("Total Weight: " + weight);
            System.out.println("Total Fee: $" + fee);
        }
    }

   
    void calcFee(String location) {
        if (weight == 0) {
            fee = 0;
        } else {
            if (location.equals("Dhanmondi")) {
                fee = (weight * 20) + 50;
            } else if (location.equals("Gulshan")) {
                fee = (weight * 20);
            } else if (location.equals("Banani")) {
                fee = (weight * 20) + 100;
            } else {
                fee = weight * 15; 
            }
        }
    }

   
    void addWeight(int extraWeight) {
        this.weight += extraWeight;
        System.out.println("Updated Weight: " + this.weight);
    }
}


4)
public class Shape2DTester {
  public static void main(String[] args) {
    Shape2D sq = new Shape2D(5);
    System.out.println("---------1----------");
    sq.area();
    System.out.println("---------2----------");
    Shape2D rectangle = new Shape2D(5,6);
    System.out.println("---------3----------");
    rectangle.area();
    System.out.println("---------4----------");
    Shape2D tri1 = new Shape2D(5,6,"Triangle");
    System.out.println("---------5----------");
    tri1.area();
    System.out.println("---------6----------");
    Shape2D tri2 = new Shape2D(5,6,7);
    System.out.println("---------7----------");
    tri2.area();
    System.out.println("---------8----------");
  }
}

public class Shape2D{
  public int length;
  public int breadth;
  public int height;
  public int base;
  public int side1;
  public int side2;
  public int side3;
  public double s;
  public double area;
  public String name;
  public boolean square;
  public boolean rec;
  public boolean tri1;
  public boolean tri2;
  
  Shape2D(int length){
    square=true;
    this.name="Square";
      this.length=length;
      System.out.println("A "+name+" has been created with length :"+length);
  }
  Shape2D(int length,int breadth){
    rec=true;
    this.name="Rectangular";
    this.length=length;
    this.breadth=breadth;
    System.out.println("A "+name+" has been created with length :"+length+" and breadth "+breadth);
  }
  Shape2D(int height,int base,String name){
    tri1=true;
    this.name=name;
    this.height=height;
    this.base=base;
     System.out.println("A "+name+" has been created with height :"+height+" and base "+base);
  }
  Shape2D(int side1, int side2, int side3){
    tri2=true;
    this.name="Triangle";
    this.side1=side1;
    this.side2=side2;
    this.side3=side3;
    s=(side1+side2+side3)/2;
     System.out.println("A "+name+" has been created with the following sides :"+ side1+" "+side2+" "+side3);
  }
     
    
    
  void area(){
    if(square){
    System.out.println("The area of the "+name+" is "+(length*length));
    square=false;
    }if(rec){
      System.out.println("The area of the "+name+" is "+(length*breadth));
      rec=false;
    }if(tri1){
      System.out.println("The area of the "+name+" is "+(0.5*base*height));
      tri1=false;
    }if(tri2){
      System.out.println("The area of the "+name+" is "+Math.sqrt(s*(s-side1)*(s-side2)*(s-side3)));
      tri2=false;
    }
  }
}
  
5)

public class BookTester {
  public static void main(String[] args) {
     System.out.println("< —--—----1—-------->");
     Book b1 = new Book("The Alchemist");
     b1.displayDetails(); 
     System.out.println("< —--—----2—-------->");
     Book b2 = new Book("1984", "George Orwell");
     b2.displayDetails();  
     System.out.println("< —--—----3—-------->");
     Book b3 = new Book("To Kill a Mockingbird", "Harper Lee", 300);
     b3.displayDetails();
     System.out.println("< —--—----4—-------->");
     b1.setDetails(250); 
     b1.displayDetails();  
     System.out.println("< —--—----5—-------->");
     b2.setDetails("Orwell", 350); 
     b2.displayDetails();  
  }
}

public class Book{
  public String name;
  public boolean name_available;
  public String author;
  public boolean author_available;
  public int price;
  public boolean price_available;
   
  Book(String name){
    this.name=name;
    name_available=true;
  }
  Book(String name,String author){
    this.name=name;
    this.author=author;
    name_available=true;
    author_available=true;
  }
  Book(String name,String author,int price){
    this.name=name;  
    this.author=author;
    this.price=price;
    name_available=true;
    author_available=true;
    price_available=true;
  }
    
  void setDetails(int price){
    this.price=price;
    price_available=true;
  }
  void setDetails(String author,int price){
    this.author=author;
    this.price=price;
    price_available=true;
  }
    
  void displayDetails(){
    if(name_available==true && author_available==false && price_available==false){
      System.out.println("Title: "+name);
    }else if(name_available==true && author_available ==true && price_available==false){
      System.out.println("Title: "+name+", Author : "+author);
    }else if(name_available==true && author_available ==true && price_available==true){
      System.out.println("Title: "+name+", Author : "+author+", Price: "+price);
    }else if(name_available==true && author_available ==false && price_available==true){
      System.out.println("Title: "+name+", Price: "+price);
    }
  }
  }
      
6)

public class ProductTester{
  public static void main(String[] args) {
    System.out.println("< —--—----1—-------->");
    Product product1 = new Product();
    product1.displayInfo();
    System.out.println();
    System.out.println("< —--—----2—-------->");
    Product product2 = new Product("Laptop", 1200.00);
    product2.setQuantity(10);
    product2.displayInfo(true); 
    System.out.println("< —--—----3—-------->");
    System.out.println("Retrieved Price: $" + product2.getPrice());
    System.out.println("Retrieved Quantity: " + product2.getQuantity());
      }
}

public class Product{
  private String name;
  private double price;
  private int quantity;
  
  
 public Product(){
    this.name="Unknown";
    this.price=0.0;
    
  }
 public void displayInfo(){
   System.out.println("Product name :"+name);
   System.out.println("Price : $"+price);
 }
 public Product(String name,double price){
   this.name=name;
   this.price=price;
 }
 public void setQuantity(int quantity){
   this.quantity=quantity;
 }
 public void displayInfo(boolean a){
   System.out.println("Product name :"+name);
   System.out.println("Price : $"+price);
   System.out.println("Quantity: "+quantity);
 }
 public double getPrice(){
   return price;
 }
 public int getQuantity(){
   return quantity;
 }
}

7)
public class StudentDriver {
  public static void main(String[] args){
    System.out.println("-----------------");
    Student student1 = new Student(12345678);
    student1.addCourse("CSE110");
    student1.setCG(2.5);
    student1.addCourse("CSE110");
    student1.addCourse("ENG101");
    student1.showAdvisee();
    System.out.println("-----------------");
    student1.rmAllCourse();
    student1.showAdvisee();
    System.out.println("-----------------");
    student1.setID(54652365);
    String[] courses = {"SOC101","CSE111","ENG102"};
    student1.addCourse(courses);
    student1.showAdvisee();
    System.out.println("-----------------");
    student1.addCourse("CSE230");
    student1.showAdvisee();
    System.out.println("-----------------");
    Student student2 = new Student(975738383,3.7);
    String[] courses2 = {"CSE220","PHY112","MAT120","BUS101","CHN101"};
    student2.addCourse(courses2);
    student2.showAdvisee();
  }
}


public class Student {
    private int id;
    private double cg;
    private boolean cgAvailable;

    private String[] courses;
    private int count;

    public Student(int id) {
        this.id = id;
        this.courses = new String[10]; 
        this.cgAvailable = false;
        this.count = 0;
    }

    public Student(int id, double cg) {
        this.id = id;
        this.cg = cg;
        this.cgAvailable = true;
        this.courses = new String[10];
        this.count = 0;
    }

    public void setCG(double cg) {
        this.cg = cg;
        this.cgAvailable = true; 
    }

    public void setID(int id) {
        this.id = id;
    }

    public void addCourse(String course) {
        if (!cgAvailable) {
            System.out.println("Failed to add " + course + "\nSet CG first");
        } else if (cg < 3 && count >= 3) {
            System.out.println("Failed to add " + course + "\nCG is low. Can't add more than 3 courses.");
        } else if (count >= 4) {
            System.out.println("Failed to add " + course + "\nMaximum 4 courses allowed.");
        } else {
            courses[count] = course;
            count++;
            System.out.println("Course " + course + " added.");
        }
    }

    public void addCourse(String[] newCourses) {
        for (String course : newCourses) {
            addCourse(course); 
        }
    }

    public void rmAllCourse() {
        this.courses = new String[10]; 
        this.count = 0; 
        System.out.println("All courses removed.");
    }

    public void showAdvisee() {
        System.out.println("Student ID: " + id + ", CGPA: " + cg);
        System.out.print("Added courses are: ");
        if (count == 0) {
            System.out.println("No courses added.");
        } else {
            for (int i = 0; i < count; i++) {
                System.out.print(courses[i] + " ");
            }
            System.out.println(); 
        }
    }
}

    